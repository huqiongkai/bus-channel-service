/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.shbus.easybus.front;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * 预定时使用-证件类型
 */
public enum CertificateType implements org.apache.thrift.TEnum {
  /**
   * 预定时使用-证件类型-身份证
   */
  id(0),
  /**
   * 预定时使用-证件类型-护照
   */
  passport(1),
  /**
   * 预定时使用-证件类型-军官证
   */
  militaryCard(2),
  /**
   * 预定时使用-证件类型-回乡证
   */
  hvps(3),
  /**
   * 预定时使用-证件类型-台胞证
   */
  mtps(4);

  private final int value;

  private CertificateType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static CertificateType findByValue(int value) { 
    switch (value) {
      case 0:
        return id;
      case 1:
        return passport;
      case 2:
        return militaryCard;
      case 3:
        return hvps;
      case 4:
        return mtps;
      default:
        return null;
    }
  }
}
