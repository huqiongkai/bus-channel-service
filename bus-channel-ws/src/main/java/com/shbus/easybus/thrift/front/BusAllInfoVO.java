/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.shbus.easybus.thrift.front;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 车次信息VO
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-31")
public class BusAllInfoVO implements org.apache.thrift.TBase<BusAllInfoVO, BusAllInfoVO._Fields>, java.io.Serializable, Cloneable, Comparable<BusAllInfoVO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BusAllInfoVO");

  private static final org.apache.thrift.protocol.TField BUS_PRICE_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("busPriceVO", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField BUS_BASIC_INFO_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("busBasicInfoVO", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField BUS_QUOTA_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("busQuotaVO", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField BUS_PKG_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("busPkgVO", org.apache.thrift.protocol.TType.STRUCT, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BusAllInfoVOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BusAllInfoVOTupleSchemeFactory());
  }

  /**
   * 车次价格信息VO
   */
  public BusPriceVO busPriceVO; // required
  /**
   * 车次基本信息VO
   */
  public BusBasicInfoVO busBasicInfoVO; // required
  /**
   * 车次配额信息VO
   */
  public BusQuotaVO busQuotaVO; // required
  /**
   * 车次打包信息VO
   */
  public BusPkgVO busPkgVO; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 车次价格信息VO
     */
    BUS_PRICE_VO((short)1, "busPriceVO"),
    /**
     * 车次基本信息VO
     */
    BUS_BASIC_INFO_VO((short)2, "busBasicInfoVO"),
    /**
     * 车次配额信息VO
     */
    BUS_QUOTA_VO((short)3, "busQuotaVO"),
    /**
     * 车次打包信息VO
     */
    BUS_PKG_VO((short)4, "busPkgVO");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BUS_PRICE_VO
          return BUS_PRICE_VO;
        case 2: // BUS_BASIC_INFO_VO
          return BUS_BASIC_INFO_VO;
        case 3: // BUS_QUOTA_VO
          return BUS_QUOTA_VO;
        case 4: // BUS_PKG_VO
          return BUS_PKG_VO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BUS_PRICE_VO, new org.apache.thrift.meta_data.FieldMetaData("busPriceVO", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BusPriceVO.class)));
    tmpMap.put(_Fields.BUS_BASIC_INFO_VO, new org.apache.thrift.meta_data.FieldMetaData("busBasicInfoVO", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BusBasicInfoVO.class)));
    tmpMap.put(_Fields.BUS_QUOTA_VO, new org.apache.thrift.meta_data.FieldMetaData("busQuotaVO", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BusQuotaVO.class)));
    tmpMap.put(_Fields.BUS_PKG_VO, new org.apache.thrift.meta_data.FieldMetaData("busPkgVO", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BusPkgVO.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BusAllInfoVO.class, metaDataMap);
  }

  public BusAllInfoVO() {
  }

  public BusAllInfoVO(
    BusPriceVO busPriceVO,
    BusBasicInfoVO busBasicInfoVO,
    BusQuotaVO busQuotaVO,
    BusPkgVO busPkgVO)
  {
    this();
    this.busPriceVO = busPriceVO;
    this.busBasicInfoVO = busBasicInfoVO;
    this.busQuotaVO = busQuotaVO;
    this.busPkgVO = busPkgVO;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BusAllInfoVO(BusAllInfoVO other) {
    if (other.isSetBusPriceVO()) {
      this.busPriceVO = new BusPriceVO(other.busPriceVO);
    }
    if (other.isSetBusBasicInfoVO()) {
      this.busBasicInfoVO = new BusBasicInfoVO(other.busBasicInfoVO);
    }
    if (other.isSetBusQuotaVO()) {
      this.busQuotaVO = new BusQuotaVO(other.busQuotaVO);
    }
    if (other.isSetBusPkgVO()) {
      this.busPkgVO = new BusPkgVO(other.busPkgVO);
    }
  }

  public BusAllInfoVO deepCopy() {
    return new BusAllInfoVO(this);
  }

  @Override
  public void clear() {
    this.busPriceVO = null;
    this.busBasicInfoVO = null;
    this.busQuotaVO = null;
    this.busPkgVO = null;
  }

  /**
   * 车次价格信息VO
   */
  public BusPriceVO getBusPriceVO() {
    return this.busPriceVO;
  }

  /**
   * 车次价格信息VO
   */
  public BusAllInfoVO setBusPriceVO(BusPriceVO busPriceVO) {
    this.busPriceVO = busPriceVO;
    return this;
  }

  public void unsetBusPriceVO() {
    this.busPriceVO = null;
  }

  /** Returns true if field busPriceVO is set (has been assigned a value) and false otherwise */
  public boolean isSetBusPriceVO() {
    return this.busPriceVO != null;
  }

  public void setBusPriceVOIsSet(boolean value) {
    if (!value) {
      this.busPriceVO = null;
    }
  }

  /**
   * 车次基本信息VO
   */
  public BusBasicInfoVO getBusBasicInfoVO() {
    return this.busBasicInfoVO;
  }

  /**
   * 车次基本信息VO
   */
  public BusAllInfoVO setBusBasicInfoVO(BusBasicInfoVO busBasicInfoVO) {
    this.busBasicInfoVO = busBasicInfoVO;
    return this;
  }

  public void unsetBusBasicInfoVO() {
    this.busBasicInfoVO = null;
  }

  /** Returns true if field busBasicInfoVO is set (has been assigned a value) and false otherwise */
  public boolean isSetBusBasicInfoVO() {
    return this.busBasicInfoVO != null;
  }

  public void setBusBasicInfoVOIsSet(boolean value) {
    if (!value) {
      this.busBasicInfoVO = null;
    }
  }

  /**
   * 车次配额信息VO
   */
  public BusQuotaVO getBusQuotaVO() {
    return this.busQuotaVO;
  }

  /**
   * 车次配额信息VO
   */
  public BusAllInfoVO setBusQuotaVO(BusQuotaVO busQuotaVO) {
    this.busQuotaVO = busQuotaVO;
    return this;
  }

  public void unsetBusQuotaVO() {
    this.busQuotaVO = null;
  }

  /** Returns true if field busQuotaVO is set (has been assigned a value) and false otherwise */
  public boolean isSetBusQuotaVO() {
    return this.busQuotaVO != null;
  }

  public void setBusQuotaVOIsSet(boolean value) {
    if (!value) {
      this.busQuotaVO = null;
    }
  }

  /**
   * 车次打包信息VO
   */
  public BusPkgVO getBusPkgVO() {
    return this.busPkgVO;
  }

  /**
   * 车次打包信息VO
   */
  public BusAllInfoVO setBusPkgVO(BusPkgVO busPkgVO) {
    this.busPkgVO = busPkgVO;
    return this;
  }

  public void unsetBusPkgVO() {
    this.busPkgVO = null;
  }

  /** Returns true if field busPkgVO is set (has been assigned a value) and false otherwise */
  public boolean isSetBusPkgVO() {
    return this.busPkgVO != null;
  }

  public void setBusPkgVOIsSet(boolean value) {
    if (!value) {
      this.busPkgVO = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BUS_PRICE_VO:
      if (value == null) {
        unsetBusPriceVO();
      } else {
        setBusPriceVO((BusPriceVO)value);
      }
      break;

    case BUS_BASIC_INFO_VO:
      if (value == null) {
        unsetBusBasicInfoVO();
      } else {
        setBusBasicInfoVO((BusBasicInfoVO)value);
      }
      break;

    case BUS_QUOTA_VO:
      if (value == null) {
        unsetBusQuotaVO();
      } else {
        setBusQuotaVO((BusQuotaVO)value);
      }
      break;

    case BUS_PKG_VO:
      if (value == null) {
        unsetBusPkgVO();
      } else {
        setBusPkgVO((BusPkgVO)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BUS_PRICE_VO:
      return getBusPriceVO();

    case BUS_BASIC_INFO_VO:
      return getBusBasicInfoVO();

    case BUS_QUOTA_VO:
      return getBusQuotaVO();

    case BUS_PKG_VO:
      return getBusPkgVO();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BUS_PRICE_VO:
      return isSetBusPriceVO();
    case BUS_BASIC_INFO_VO:
      return isSetBusBasicInfoVO();
    case BUS_QUOTA_VO:
      return isSetBusQuotaVO();
    case BUS_PKG_VO:
      return isSetBusPkgVO();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BusAllInfoVO)
      return this.equals((BusAllInfoVO)that);
    return false;
  }

  public boolean equals(BusAllInfoVO that) {
    if (that == null)
      return false;

    boolean this_present_busPriceVO = true && this.isSetBusPriceVO();
    boolean that_present_busPriceVO = true && that.isSetBusPriceVO();
    if (this_present_busPriceVO || that_present_busPriceVO) {
      if (!(this_present_busPriceVO && that_present_busPriceVO))
        return false;
      if (!this.busPriceVO.equals(that.busPriceVO))
        return false;
    }

    boolean this_present_busBasicInfoVO = true && this.isSetBusBasicInfoVO();
    boolean that_present_busBasicInfoVO = true && that.isSetBusBasicInfoVO();
    if (this_present_busBasicInfoVO || that_present_busBasicInfoVO) {
      if (!(this_present_busBasicInfoVO && that_present_busBasicInfoVO))
        return false;
      if (!this.busBasicInfoVO.equals(that.busBasicInfoVO))
        return false;
    }

    boolean this_present_busQuotaVO = true && this.isSetBusQuotaVO();
    boolean that_present_busQuotaVO = true && that.isSetBusQuotaVO();
    if (this_present_busQuotaVO || that_present_busQuotaVO) {
      if (!(this_present_busQuotaVO && that_present_busQuotaVO))
        return false;
      if (!this.busQuotaVO.equals(that.busQuotaVO))
        return false;
    }

    boolean this_present_busPkgVO = true && this.isSetBusPkgVO();
    boolean that_present_busPkgVO = true && that.isSetBusPkgVO();
    if (this_present_busPkgVO || that_present_busPkgVO) {
      if (!(this_present_busPkgVO && that_present_busPkgVO))
        return false;
      if (!this.busPkgVO.equals(that.busPkgVO))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_busPriceVO = true && (isSetBusPriceVO());
    list.add(present_busPriceVO);
    if (present_busPriceVO)
      list.add(busPriceVO);

    boolean present_busBasicInfoVO = true && (isSetBusBasicInfoVO());
    list.add(present_busBasicInfoVO);
    if (present_busBasicInfoVO)
      list.add(busBasicInfoVO);

    boolean present_busQuotaVO = true && (isSetBusQuotaVO());
    list.add(present_busQuotaVO);
    if (present_busQuotaVO)
      list.add(busQuotaVO);

    boolean present_busPkgVO = true && (isSetBusPkgVO());
    list.add(present_busPkgVO);
    if (present_busPkgVO)
      list.add(busPkgVO);

    return list.hashCode();
  }

  @Override
  public int compareTo(BusAllInfoVO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetBusPriceVO()).compareTo(other.isSetBusPriceVO());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusPriceVO()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.busPriceVO, other.busPriceVO);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusBasicInfoVO()).compareTo(other.isSetBusBasicInfoVO());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusBasicInfoVO()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.busBasicInfoVO, other.busBasicInfoVO);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusQuotaVO()).compareTo(other.isSetBusQuotaVO());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusQuotaVO()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.busQuotaVO, other.busQuotaVO);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusPkgVO()).compareTo(other.isSetBusPkgVO());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusPkgVO()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.busPkgVO, other.busPkgVO);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BusAllInfoVO(");
    boolean first = true;

    sb.append("busPriceVO:");
    if (this.busPriceVO == null) {
      sb.append("null");
    } else {
      sb.append(this.busPriceVO);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("busBasicInfoVO:");
    if (this.busBasicInfoVO == null) {
      sb.append("null");
    } else {
      sb.append(this.busBasicInfoVO);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("busQuotaVO:");
    if (this.busQuotaVO == null) {
      sb.append("null");
    } else {
      sb.append(this.busQuotaVO);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("busPkgVO:");
    if (this.busPkgVO == null) {
      sb.append("null");
    } else {
      sb.append(this.busPkgVO);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (busPriceVO != null) {
      busPriceVO.validate();
    }
    if (busBasicInfoVO != null) {
      busBasicInfoVO.validate();
    }
    if (busQuotaVO != null) {
      busQuotaVO.validate();
    }
    if (busPkgVO != null) {
      busPkgVO.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BusAllInfoVOStandardSchemeFactory implements SchemeFactory {
    public BusAllInfoVOStandardScheme getScheme() {
      return new BusAllInfoVOStandardScheme();
    }
  }

  private static class BusAllInfoVOStandardScheme extends StandardScheme<BusAllInfoVO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BusAllInfoVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BUS_PRICE_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.busPriceVO = new BusPriceVO();
              struct.busPriceVO.read(iprot);
              struct.setBusPriceVOIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BUS_BASIC_INFO_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.busBasicInfoVO = new BusBasicInfoVO();
              struct.busBasicInfoVO.read(iprot);
              struct.setBusBasicInfoVOIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BUS_QUOTA_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.busQuotaVO = new BusQuotaVO();
              struct.busQuotaVO.read(iprot);
              struct.setBusQuotaVOIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BUS_PKG_VO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.busPkgVO = new BusPkgVO();
              struct.busPkgVO.read(iprot);
              struct.setBusPkgVOIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BusAllInfoVO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.busPriceVO != null) {
        oprot.writeFieldBegin(BUS_PRICE_VO_FIELD_DESC);
        struct.busPriceVO.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.busBasicInfoVO != null) {
        oprot.writeFieldBegin(BUS_BASIC_INFO_VO_FIELD_DESC);
        struct.busBasicInfoVO.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.busQuotaVO != null) {
        oprot.writeFieldBegin(BUS_QUOTA_VO_FIELD_DESC);
        struct.busQuotaVO.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.busPkgVO != null) {
        oprot.writeFieldBegin(BUS_PKG_VO_FIELD_DESC);
        struct.busPkgVO.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BusAllInfoVOTupleSchemeFactory implements SchemeFactory {
    public BusAllInfoVOTupleScheme getScheme() {
      return new BusAllInfoVOTupleScheme();
    }
  }

  private static class BusAllInfoVOTupleScheme extends TupleScheme<BusAllInfoVO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BusAllInfoVO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetBusPriceVO()) {
        optionals.set(0);
      }
      if (struct.isSetBusBasicInfoVO()) {
        optionals.set(1);
      }
      if (struct.isSetBusQuotaVO()) {
        optionals.set(2);
      }
      if (struct.isSetBusPkgVO()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetBusPriceVO()) {
        struct.busPriceVO.write(oprot);
      }
      if (struct.isSetBusBasicInfoVO()) {
        struct.busBasicInfoVO.write(oprot);
      }
      if (struct.isSetBusQuotaVO()) {
        struct.busQuotaVO.write(oprot);
      }
      if (struct.isSetBusPkgVO()) {
        struct.busPkgVO.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BusAllInfoVO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.busPriceVO = new BusPriceVO();
        struct.busPriceVO.read(iprot);
        struct.setBusPriceVOIsSet(true);
      }
      if (incoming.get(1)) {
        struct.busBasicInfoVO = new BusBasicInfoVO();
        struct.busBasicInfoVO.read(iprot);
        struct.setBusBasicInfoVOIsSet(true);
      }
      if (incoming.get(2)) {
        struct.busQuotaVO = new BusQuotaVO();
        struct.busQuotaVO.read(iprot);
        struct.setBusQuotaVOIsSet(true);
      }
      if (incoming.get(3)) {
        struct.busPkgVO = new BusPkgVO();
        struct.busPkgVO.read(iprot);
        struct.setBusPkgVOIsSet(true);
      }
    }
  }

}

